View(dato.Aire.Test)
View(dato.Aire.Train)
gc()
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 0.3)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
plt.Aire.Grafico
View(dato.Aire)
View(dato.Aire.Test)
View(dato.Aire.Train)
View(dato.Aire.Test)
View(dato.Aire.Train)
View(dato.Aire)
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 0.5)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 0.9)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 7)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 95)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 45)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 450)
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 154)
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 152)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 1)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
#Autor: Sergio Jose Aguas Montaño
#Entorno de trabajo
getwd()
setwd("E:/Personal/UNI/8vo Semestre/SSPIAII/Trabajos GitHub/SSPIAII.24A.AguasMontanoSergio/Rstudio/p1.1_ProcesamientoRegresionLineal")
options(scipen = 999)
set.seed(2000)
#Librería de gráficos
library(ggplot2)
#Dataset 100 ~ 200 registros
#Procesado de datos a forma de variables
dato.Iris <- iris
dato.Aire <- airquality
#Reemplazo de datos NA en campo Numérico
dato.Aire$Ozone <- ifelse(is.na(dato.Aire$Ozone),
ave(dato.Aire$Ozone,
FUN = function(x) mean(x,na.rm = T)
),
dato.Aire$Ozone)
#Creación de Factores para datos categóricos
dato.Iris$Species <- factor(dato.Iris$Species,
levels = c("setosa","versicolor","virginica"),
labels = c("Echeverria","Hongo","perenne"))
#División de los conjuntos de datos en Training y Testing
Split <- sample.split(Y = dato.Aire$Ozone, SplitRatio = 45)
dato.Aire.Train <- subset(dato.Aire, Split == T)
dato.Aire.Test <- subset(dato.Aire, Split == F)
#Creación del modelo de datos lineal para el Dataset (Reg. Lineal simple)
mdl.Regresor <- lm(formula = Ozone ~ Day,
data = dato.Aire.Train)
summary(mdl.Regresor)
#Prediccion
mdl.Predict <- predict(object = mdl.Regresor,
newdata = dato.Aire.Test)
#Representa los datos obtenidos del modelo en una gráfica para los datos de entrenamiento y prueba
plt.Aire <- ggplot() +
theme_dark() +
ggtitle("Regresión: Cantidad de Ozono por día") +
xlab("Día") +
ylab("Ozono")
plt.Aire.Grafico <- plt.Aire +
geom_point(aes(x = dato.Aire.Train$Day,
y = dato.Aire.Train$Ozone),
colour = "deepskyblue1",
shape = 14,
size = 5) +
geom_line(aes(x = dato.Aire.Train$Day,
y = predict(mdl.Regresor, newdata = dato.Aire.Train)),
colour = "green",
)
plt.Aire.Grafico
View(dato.Aire.Test)
View(dato.Aire.Train)
View(dato.Aire.Test)
View(dato.Aire)
