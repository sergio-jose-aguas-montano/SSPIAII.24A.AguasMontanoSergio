stringsAsFactors = T)
View(PoSal)
#Preprocesamiento
PoSal <- read.csv("Datasets/Position_Salaries.csv",
header = T,
stringsAsFactors = T)
PoSal$Level <- NULL
plot(PoSal)
View(PoSal)
#Realiza la separación en los subset de Training y Testing
#División
Split <- sample.split(PoSal, SplitRatio = 0.8)
summary(PoSal)
View(PoSal)
grafico <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario")
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario")
library(ggplot2)
library(caTools)
library(mltools)
library(data.table)
library(cowplot)
library(caret)
library(rpart)
library(rpart.plot)
library(randomForest)
plt.PoSal
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario")
plt.PoSal
mdl.lineal.Position <- lm(formula = Salary ~ Position,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario") +
geom_line(aes(x = df.Position$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
#Grado1
mdl.lineal.Position <- lm(formula = Salary ~ Position,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario") +
geom_line(aes(x = PoSal$Position,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
y
#Grado1
mdl.lineal.Position <- lm(formula = Salary ~ Position,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Position,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
View(PoSal)
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Position ~ Salary,
data = PoSal)
summary(mdl.lineal.Position)
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Position,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Position,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
summary(mdl.lineal.Position)
PoSal.rpart <- rpart(formula = Salary ~ Position, data = PoSal)
rpart.plot(PoSal.rpart)
#Preprocesamiento
PoSal <- read.csv("Datasets/Position_Salaries.csv",
header = T,
stringsAsFactors = T)
#PoSal$Level <- NULL
summary(PoSal)
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Position,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Position,
y = PoSal$Salary)) +
xlab("Puesto") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Position,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
PoSal.rpart <- rpart(formula = Salary ~ Position, data = PoSal)
rpart.plot(PoSal.rpart)
plt.PoSal
View(plt.PoSal)
View(PoSal)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal)
rpart.plot(PoSal.rpart)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minisplit = 5)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, miniplit = 5)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, mimplit = 5)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minplit = 5)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minsplit = 5)
rpart.plot(PoSal.rpart)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minsplit = 1)
rpart.plot(PoSal.rpart)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minsplit = 2)
rpart.plot(PoSal.rpart)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minsplit = 3)
rpart.plot(PoSal.rpart)
PoSal.rpart <- rpart(formula = Salary ~ Level, data = PoSal, minsplit = 1)
rpart.plot(PoSal.rpart)
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "tomato")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 3),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 5),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 1),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 2),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 3),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 4),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 5),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_smooth(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 5),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 2),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 3),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 4),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(mdl.lineal.Position,
newdata = PoSal)),
colour = "green")
plt.PoSal
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ poly(Level, 4),
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(PoSal.rpart,
newdata = PoSal)),
colour = "green")
#Modelo de regresion
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(PoSal.rpart,
newdata = PoSal)),
colour = "green")
plt.PoSal
x <- seq(min(PoSal[,1]) -1,
max(PoSal[,1]) +1,
by = 0.1)
x <- seq(min(PoSal[,1]) - 1,
max(PoSal[,1]) + 1,
by = 0.1)
x <- seq(min(PoSal[,1]) - 1,
max(PoSal[,1]) + 1,
by = 0.1)
library(ggplot2)
library(caTools)
library(mltools)
library(data.table)
library(cowplot)
library(caret)
library(rpart)
library(rpart.plot)
library(randomForest)
x <- seq(min(PoSal[,1]) - 1,
max(PoSal[,1]) + 1,
by = 0.1)
x <- seq(min(PoSal[,1]) - 1,
max(PoSal[,1]) + 1,
by = 0.1)
#Preprocesamiento
PoSal <- read.csv("Datasets/Position_Salaries.csv",
header = T,
stringsAsFactors = T)
#PoSal$Level <- NULL
PoSal$Position <- NULL
summary(PoSal)
#Modelo lineal
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
#Gráfico
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(PoSal.rpart,
newdata = PoSal)),
colour = "green")+
geom_line(aes(x = new.Data$Level,
y = predict(PoSal.rpart,
newdata = new.Data)),
colour = "blue")
#Llamar al gráfico
plt.PoSal
#Preprocesamiento
PoSal <- read.csv("Datasets/Position_Salaries.csv",
header = T,
stringsAsFactors = T)
summary(PoSal)
#Modelo lineal
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
#Gráfico
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(PoSal.rpart,
newdata = PoSal)),
colour = "green")+
geom_line(aes(x = new.Data$Level,
y = predict(PoSal.rpart,
newdata = new.Data)),
colour = "blue")
#Llamar al gráfico
plt.PoSal
library(ggplot2)
library(caTools)
library(mltools)
library(data.table)
library(cowplot)
library(caret)
library(rpart)
library(rpart.plot)
library(randomForest)
#Preprocesamiento
PoSal <- read.csv("Datasets/Position_Salaries.csv",
header = T,
stringsAsFactors = T)
summary(PoSal)
#Modelo lineal
mdl.lineal.Position <- lm(formula = Salary ~ Level,
data = PoSal)
summary(mdl.lineal.Position)
PoSal$Position <- NULL
x <- seq(min(PoSal[,1]) - 1,
max(PoSal[,1]) + 1,
by = 0.1)
View(PoSal)
new.Data <- as.data.frame(x)
colnames(new.Data) <- "Level"
#Gráfico
plt.PoSal <- ggplot() +
theme_light() +
geom_point(aes(x = PoSal$Level,
y = PoSal$Salary)) +
xlab("Nivel") +
ylab("Salario") +
geom_line(aes(x = PoSal$Level,
y = predict(PoSal.rpart,
newdata = PoSal)),
colour = "green")+
geom_line(aes(x = new.Data$Level,
y = predict(PoSal.rpart,
newdata = new.Data)),
colour = "blue")
#Llamar al gráfico
plt.PoSal
